<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tartley.com (Posts about gis)</title><link>https://www.tartley.com/</link><description>Geographical Information Systems</description><atom:link href="https://www.tartley.com/tags/gis.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2025 &lt;a href="mailto:tartley @ tartley dot com"&gt;Jonathan Hartley&lt;/a&gt; </copyright><lastBuildDate>Mon, 26 May 2025 23:19:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Neogeography</title><link>https://www.tartley.com/posts/neogeography/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;&lt;img alt="" src="https://www.tartley.com/files/2008/08/co-to-ca-road-trip-map.png" title="co-to-ca-road-trip-map"&gt;&lt;/p&gt;
&lt;p&gt;Over the summer I've been keeping a geographic journal of some of our
recent adventures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href="http://maps.google.com/maps/ms?ie=UTF8&amp;amp;hl=en&amp;amp;msa=0&amp;amp;msid=114555587615190768594.00044fcb05ec0c0be2012&amp;amp;ll=45.540084,-93.44283&amp;amp;spn=5.809675,14.282227&amp;amp;z=7"&gt;The Minnesota project&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;our summer in Blooming Prairie&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href="http://maps.google.com/maps/ms?ie=UTF8&amp;amp;hl=en&amp;amp;msa=0&amp;amp;msid=114555587615190768594.000453372a3a9329df229&amp;amp;ll=37.431251,-110.786133&amp;amp;spn=13.158173,28.564453&amp;amp;t=h&amp;amp;z=6"&gt;CO to CA&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;our summer roadtrip&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's an amusing journalling project for me, but as an exercise in
neogeography (the distainful term Geographic Information System pros use
to describe such upstart tools, popular with the great unwashed) I have
to say it's pretty forlorn. The editing tool is thoroughly annoying to
use, and the data model is none existant - you're simply crayoning
one-off symbols on top of the map, with no ability to relate any symbol
to any other, except by manually assigning them the same symbology. The
ability to import KMZ is little consolation if all the resultant data is
so unstructured. No doubt things will get better as GIS and neogeography
borrow each other's best ideas, but for the time being this exercise
left me disappointed.&lt;/p&gt;
&lt;p&gt;I seem to recall that the editing tools in Google Earth are a smidgeon
better, but still profoundly lacking. Anyone got any ideas what I should
be using instead for personal 'for amusement' projects like this?&lt;/p&gt;</description><category>gis</category><category>journal</category><category>map</category><guid>https://www.tartley.com/posts/neogeography/</guid><pubDate>Mon, 11 Aug 2008 21:31:25 GMT</pubDate></item><item><title>Where you gonna be?</title><link>https://www.tartley.com/posts/where-you-gonna-be/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;[&lt;a href="http://www.vimeo.com/796747/l:embed_796747"&gt;Google Earth and
whereyougonnabe&lt;/a&gt; from &lt;a href="http://www.vimeo.com/user365144/l:embed_796747"&gt;Peter
Batty&lt;/a&gt; on
&lt;a href="http://vimeo.com/l:embed_796747"&gt;Vimeo&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Peter Batty has a funky screencast of his incipient social networking
slash geolocation application, &lt;a href="http://whereyougonnabe.com/"&gt;Where You Gonna
Be?&lt;/a&gt; which allows you to see when your
future itinerary crosses paths with other people you know. Initially
implemented as a &lt;a href="http://apps.facebook.com/whereyougonnabe/"&gt;Facebook
app&lt;/a&gt;, it now features Google
Earth integration. It's currently restricted to beta testers, but should
be opening up to all comers soon.&lt;/p&gt;
&lt;p&gt;One day, functionality like this will be part of the ubiquitous and
unobtrusive infrastructure of society. For now, there's WYGB.&lt;/p&gt;</description><category>gis</category><category>internet</category><category>journal</category><guid>https://www.tartley.com/posts/where-you-gonna-be/</guid><pubDate>Thu, 20 Mar 2008 06:26:41 GMT</pubDate></item><item><title>Configuration vs Customisation</title><link>https://www.tartley.com/posts/configuration-vs-customisation/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;I loved a &lt;a href="http://geothought.blogspot.com/2007/06/thoughts-on-ges-next-generation-system.html"&gt;recent
post&lt;/a&gt;
by GIS luminary Peter Batty about forthcoming developments in the GIS
industry. However, I was struck by his allusions to a future release of
Smallworld which would dispense of the problems caused by the common
practice of individual clients writing custom software to tailor the
system to their specific needs, by allowing sufficient data-driven
customisation out of the box. I wrote a response which I think I'm going
to post here as well. Suck it up.&lt;/p&gt;
&lt;p&gt;My interest and excitement was tinged with a frisson of trepidation, at
the description of the configurable GIS behaviour. I know there's a
whole phalanx of very smart engineers at GE, who are no doubt
immeasurably more cognisant of the following issues than myself. But, as
is my wont, I'm not going to let that get in the way of an opportunity
for a jolly good rant, so here goes.&lt;/p&gt;
&lt;p&gt;Obviously data driven behaviour is brilliant. However, it's only good up
to a point. Once the behaviour in question becomes complex enough (and a
GIS definitely qualifies), there's a real risk of the &lt;a href="http://worsethanfailure.com/Articles/The_Inner-Platform_Effect.aspx"&gt;Inner Platform
effect&lt;/a&gt;:
In an effort to achieve the same levels of flexibility as the
programming languages that it is designed to replace, the configuration
system ends up replicating all their features - badly.&lt;/p&gt;
&lt;p&gt;Such an endeavour is caught between two stools. If it is insufficiently
ambitious, the configuration will not be flexible enough to meet
clients' needs. If it does manages to capture the power of the
programming languages it replaces, then it is Turing complete, and all
you have done is convert customisation using a standard, proven,
well-known programming language into configuration using a ghastly
proprietary language that is embedded within your configuration schema.&lt;/p&gt;
&lt;p&gt;In addition, creating such a configuration actually ends up being much
harder for clients. It requires deep proprietary skills, as opposed to
common skills like C#, and it cannot lean on any of the supportive
ecosystem of tools and knowledge that an established language has built
up over the years. Perhaps worst of all, it will *still* require
software engineering skills to perform the configuration, and all the
good software engineers will have run a mile.&lt;/p&gt;
&lt;p&gt;Like I say, no doubt there are smart people at GE who have been figuring
out solutions to all this for years by now, but I'd have to hear what
those solutions were before I'd trust such a system.&lt;/p&gt;
&lt;p&gt;To my way of thinking, the best solution to the problem is to
acknowledge that the best way of specifying behaviour is to use a
programming language - that is exactly what they were designed for.
Trying to sidestep that is simply swimming against the current, and you
need to embrace it. You want a domain specific language (DSL), so that
it is concise and intuitive for clients, but you don't want it to be a
proprietary language - that way lies madness. So what you need is to
provide is a library that extends an existing, established language,
making it into your GIS DSL. Creating DSLs from Python or Ruby is all
the rage these days, and I believe the above chain of reasoning is why.&lt;/p&gt;</description><category>gis</category><category>imho</category><guid>https://www.tartley.com/posts/configuration-vs-customisation/</guid><pubDate>Fri, 29 Jun 2007 23:19:22 GMT</pubDate></item></channel></rss>