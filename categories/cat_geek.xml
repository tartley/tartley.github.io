<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tartley.com (Posts about Geek)</title><link>https://www.tartley.com/</link><description></description><atom:link href="https://www.tartley.com/categories/cat_geek.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:tartley@tartley.com"&gt;Jonathan Hartley&lt;/a&gt; &lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;span xmlns:dct="http://purl.org/dc/terms/" property="dct:title"&gt;tartley.com&lt;/span&gt; by &lt;a xmlns:cc="http://creativecommons.org/ns#" href="https://www.tartley.com" property="cc:attributionName" rel="cc:attributionURL"&gt;Jonathan Hartley&lt;/a&gt; is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.</copyright><lastBuildDate>Thu, 11 Jun 2020 19:39:42 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Installing Colout</title><link>https://www.tartley.com/posts/2019/1/25/installing-colout.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://nojhan.github.io/colout/"&gt;Colout&lt;/a&gt; is amazing, I use it all the time.&lt;/p&gt;
&lt;p&gt;But &lt;code&gt;pip install colout&lt;/code&gt; from PyPI is broken, and has been for many months,
due to a typo in the
&lt;a href="https://pypi.org/project/colout/"&gt;latest (v0.5) PyPI release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've tried to contact the author, with email and
&lt;a href="https://github.com/nojhan/colout/issues/101i"&gt;issues&lt;/a&gt; on the
&lt;a href="https://github.com/nojhan/colout/issues"&gt;Colout Github project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This has had no effect, although I see the author has made substantial commits
to the Github project in that time, including fixing this problem and tagging a
new v0.6 version, although has not released any of that to PyPI.&lt;/p&gt;
&lt;p&gt;So, in increasing order of desirability, you can either:&lt;/p&gt;
&lt;p&gt;Clone the latest repo &lt;a href="https://github.com/nojhan/colout"&gt;from Github&lt;/a&gt;, and
install from that:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# cd to the clone, then&lt;/span&gt;
python3 -m pip install --user .
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Or, pip install the version I uploaded to PyPI, which is a straight copy of the
latest Github at the time:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install --user colout-fix
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Or, best of all, pip install straight from the original Github repo:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install --user git+git://github.com/nojhan/colout.git
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Note that, throughout, we're using &lt;code&gt;--user&lt;/code&gt;, so that you can install
development tools like this system-wide for the current user, without needing a
virtualenv, without needing root access, and without modifying your installed
Python system libraries.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Linux-dev</category><guid>https://www.tartley.com/posts/2019/1/25/installing-colout.html</guid><pubDate>Sat, 26 Jan 2019 00:40:55 GMT</pubDate></item><item><title>Running Multiple Firefox Profiles on Linux</title><link>https://www.tartley.com/posts/2018/2/21/running-multiple-firefox-profiles.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently switched from Chrome to Firefox. It's so &lt;em&gt;fast&lt;/em&gt;, and easier
to trust that Mozilla has my privacy and interests at heart than Google
does.&lt;/p&gt;
&lt;p&gt;I want to run a second profile at work, to keep a distinct set of open
tabs, bookmarks, and the like. Here's how I did it:&lt;/p&gt;
&lt;p&gt;Close all Firefox windows. Run the Profile Manager with &lt;code&gt;firefox -p&lt;/code&gt;.
Create a second profile.&lt;/p&gt;
&lt;p&gt;Open Firefox and find the directories your profiles live by browsing to
&lt;code&gt;about:profiles&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Substitute those directories into this firefox.desktop file, where I've
marked 'XXX':&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;# Gnome3 .desktop file for Firefox with multiple profiles&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;
&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Browse&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt;
&lt;span class="n"&gt;GenericName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Web&lt;/span&gt; &lt;span class="n"&gt;Browser&lt;/span&gt;
&lt;span class="n"&gt;Keywords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Internet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;WWW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Browser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Web&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Explorer&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
&lt;span class="n"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;MultipleArgs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;
&lt;span class="n"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GNOME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;GTK&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Network&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;WebBrowser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Actions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;
&lt;span class="n"&gt;MimeType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xhtml&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rdf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jpeg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;webm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xpinstall&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;StartupNotify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt; &lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;XXX&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt; &lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;XXX&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Save the above as firefox.desktop and install using:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ desktop-file-validate firefox.desktop
$ desktop-file-install --dir&lt;span class="o"&gt;=&lt;/span&gt;.local/share/applications firefox.desktop
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;This results in a Firefox icon in your applications menu that defaults
to whichever profile you mark as default in the ProfileManager, but
right clicking lets you select the home or work profile explicitly. Open
each, and change the theme in one of them so the windows are visually
distinct.&lt;/p&gt;
&lt;p&gt;Tested on Ubuntu, RHEL 7.3, probably works on all Gnome3 desktops.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Linux-dev</category><guid>https://www.tartley.com/posts/2018/2/21/running-multiple-firefox-profiles.html</guid><pubDate>Thu, 22 Feb 2018 00:40:55 GMT</pubDate></item><item><title>Google Chrome Credit</title><link>https://www.tartley.com/posts/2016/1/20/google-chrome-credit.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;I just noticed: Open Chrome, go to &lt;chrome:&gt;&lt;/chrome:&gt;, search in page,
'show licence', and:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tartley.com/files/2016/01/chrome-credit.png"&gt;&lt;img alt="chrome-credit" src="https://www.tartley.com/files/2016/01/chrome-credit.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Which is nice. Not bad for a dirty weekend hack.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Linux-dev</category><category>Software</category><guid>https://www.tartley.com/posts/2016/1/20/google-chrome-credit.html</guid><pubDate>Thu, 21 Jan 2016 05:10:47 GMT</pubDate></item><item><title>Git: When to use three dots vs two</title><link>https://www.tartley.com/posts/2015/8/25/git-when-to-use-three-dots-vs-two.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;I endlessly misremember when to use '...' in git versus '..'. That ends
today:&lt;/p&gt;
&lt;p&gt;To see the commits or diffs introduced by a branch (the filled circles â):&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;     f
    +â  m           git log m..f
     |  â
    +â  |           git diff m...f
      \ â
       \|
        â
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;To see the commits or diffs between the tip of one branch and another:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;     f              git log m...f
    +â  m           All commits look the same,
     |  â-          unless you use --left-right, which
    +â  |           shows where each commit comes from.
      \ â-
       \|           git diff m..f
        â           '-' commits are shown inverted,
                     i.e. additions as deletions.
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;To see the commits from 'f' back to the beginning of time:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;     f
    +â  m           git log f
     |  â
    +â  |           (diffs back to start of time are just
      \ â            the contents of the working tree)
       \|
       +â
        |
       +â
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Throughout, omitted branchname defaults to current HEAD, i.e, the one of the
above that you almost always want:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git diff m...f
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;is the same as&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout f
git diff m...
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout m
git diff ...f
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Is there a word for unicode ascii art?&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Git</category><category>Version control</category><guid>https://www.tartley.com/posts/2015/8/25/git-when-to-use-three-dots-vs-two.html</guid><pubDate>Tue, 25 Aug 2015 16:51:30 GMT</pubDate></item><item><title>Thoughts on Nylas' "How We Deploy Code"</title><link>https://www.tartley.com/posts/2015/7/21/thoughts-on-nylas-how-we-deploy-code.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;Some thoughts on &lt;a href="https://nylas.com/blog/packaging-deploying-python"&gt;Nylas' post "How We Deploy
Code."&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The goals of making deployment consistent, reliable and fast are very
laudable, and the conclusion involving creating Debian packages is just
great. But in the spirit of geek nitpicking, I can't help but think the
justifications given are misguided, and overlook a simpler solution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; pip does not offer a "revert deploy" strategy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yes it does. Throw away the virtualenv and create a new one using the
requirements.txt from an earlier release. This might be slow, but you
can both speed it up (see below), and you can keep old versioned
virtualenvs around, as a cache of the output of this slow step, so that
reverts (the time when you really want deploys to go quickly) require
only a couple of symlinks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Oooh, and I just had an idea. You could version virtualenvs
using a hash of the requirements, so that deploys which do not change
dependencies can share the same virtualenv. I've never tried that - it
might work?!?!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Installing dependencies with pip can make deploys painfully
slow&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is true. But it's not the final word on the matter.&lt;/p&gt;
&lt;p&gt;Firstly, don't grab the dependencies you're installing from PyPI. Have a
local cache of them. That speeds up the install tremendously, not just
because no download takes place, but also because no trawling of PyPI
and author sites for possible alternate versions takes place. Some
people use a local PyPI instance, but I like simply using a directory
full of packages. Point pip at it using
'&lt;code&gt;pip install --no-index --find-links=packages -r requirements&lt;/code&gt;'. The
'packages' directory could be checked into your project's repo, so that
once you've checked a project out, you have everything you need to
deploy to local VMs, even with no network connection at all. I wrote
about this &lt;a href="https://www.tartley.com/pip-install-lightspeed-and-bulletproof"&gt;a while ago&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Building your code separately on each host will cause
consistency issues&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So don't install dependencies using source packages, use wheels instead.
Then any slow or unreliable build step is done once, when you create the
packages directory, while deployment is now reliable and requires no
development tools on the production server such as compilers, headers,
etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; As a bonus, this will again substantially speed up the
creation of your virtualenv when deploying.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Deploys will fail if the PyPI or your git server are down&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PyPI outages (or a package author deleting their package, which happens
routinely) are not a problem if you're deploying from a local source of
packages.&lt;/p&gt;
&lt;p&gt;I agree that application code deployment shouldn't be done using a 'git
pull'. Accessibility to GitHub shouldn't be a single point of failure,
and the fewer development tools needed on production servers the better.
So export the code from git into a tar file when you cut a release, and
then push it out using scp at deploy time.&lt;/p&gt;
&lt;p&gt;Having said all that, there are still advantages to having your whole
app and its dependencies handled by a single mechanism like Debian
packages, rather than more bug-prone ad-hoc scripts and Ansible config.
So I'm not at all against the final conclusions of the Nylas article.
(Hugs to you folks at Nylas!)&lt;/p&gt;
&lt;p&gt;Dashed this out in ten minutes between daycare pickup and dinner being
ready. Apologies for the inevitable shoddyness.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Python</category><category>Software</category><guid>https://www.tartley.com/posts/2015/7/21/thoughts-on-nylas-how-we-deploy-code.html</guid><pubDate>Wed, 22 Jul 2015 00:06:02 GMT</pubDate></item><item><title>Listen to your phone through your PC speakers</title><link>https://www.tartley.com/posts/2015/3/15/listen-to-your-phone-through-your-pc-speakers.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="c1"&gt;# Directs audio input (e.g. mic) to audio output (e.g. speakers),&lt;/span&gt;
&lt;span class="c1"&gt;# then sleeps forever. Stops audio redirection when it is killed.&lt;/span&gt;
&lt;span class="c1"&gt;# So, for example, plug your phone into the PC's mic, run 'listen',&lt;/span&gt;
&lt;span class="c1"&gt;# and listen to phone audio through your computer's speakers.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Requires:&lt;/span&gt;
&lt;span class="c1"&gt;# sudo apt-get install pactl # Ubuntu&lt;/span&gt;

&lt;span class="nb"&gt;set&lt;/span&gt; -e

&lt;span class="nv"&gt;module&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pactl load-module module-loopback&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; cleanup &lt;span class="o"&gt;{&lt;/span&gt;
    pactl unload-module &lt;span class="nv"&gt;$module&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;trap&lt;/span&gt; cleanup EXIT

sleep infinity
&lt;/code&gt;&lt;/pre&gt;</description><category>Bash</category><category>Geek</category><guid>https://www.tartley.com/posts/2015/3/15/listen-to-your-phone-through-your-pc-speakers.html</guid><pubDate>Sun, 15 Mar 2015 15:50:09 GMT</pubDate></item><item><title>Â£ key in Windows on a US laptop keyboard, done right.</title><link>https://www.tartley.com/posts/2011/7/10/and-e-keys-in-windows-on-a-us-laptop-keyboard-done-right.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;The usual solution to typing non-US characters on a US keyboard in
Windows is to hold left-alt, then type on the numeric keypad:&lt;/p&gt;
&lt;p&gt;Â£Â Â  Left-alt + 0163&lt;/p&gt;
&lt;p&gt;â¬Â Â  Left-alt + 0128&lt;/p&gt;
&lt;p&gt;This is a pain on my (otherwise fabulous) Thinkpad laptop, because the
numeric keypad is accessed by holding the blue 'Fn' key while you tap
ScrLk, to toggle numeric keypad mode, and then doing the same again
afterwards to turn it off.&lt;/p&gt;
&lt;p&gt;One inadequate alternative (on WindowsXP, YMMV) is to go into control
panel; Regional and Language Options; Languages; Details; Settings. Add
a new keyboard configuration, "United States-International", which
should be grouped under your existing language ("English (United
Kingdom)" for me.) OK all the dialogs, restart your applications.&lt;/p&gt;
&lt;p&gt;Now you can simply type:&lt;/p&gt;
&lt;p&gt;Â£Â Â  Right-alt + Shift + 4&lt;/p&gt;
&lt;p&gt;â¬Â Â  Right-alt + 5&lt;/p&gt;
&lt;p&gt;The downside of this solution is that the "UnitedStates-International"
keyboard setting adds a bunch of other features, including 'dead-keys',
whereby quotes and other punctuation are used to add accents to letters,
which is overly intrusive if, like me, you hardly ever use accents.&lt;/p&gt;
&lt;p&gt;Ultimate solution then, define your own personal keyboard layout.
Download the Microsoft Keyboard Layout Creator from here:
&lt;a href="http://msdn.microsoft.com/en-us/goglobal/bb964665"&gt;http://msdn.microsoft.com/en-us/goglobal/bb964665&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My end result is an MSI with which I can install a new keyboard layout,
which is exactly like 'US', but with the addition of Â£ on the key
right-alt + 3:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tartley.com/files/2011/07/windows-US-keyboard-layout-with-pound-on-right-alt-3.zip"&gt;windows-US-keyboard-layout-with-pound-on-right-alt-3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The source .klc file is in there, so you could add your own tweaks on
top of that.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>MSWin-dev</category><guid>https://www.tartley.com/posts/2011/7/10/and-e-keys-in-windows-on-a-us-laptop-keyboard-done-right.html</guid><pubDate>Sun, 10 Jul 2011 18:06:34 GMT</pubDate></item><item><title>Converting any repository from Svn to Hg on Windows</title><link>https://www.tartley.com/posts/2010/10/20/converting-any-repository-fom-svn-to-hg-on-windows.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;There's been a lot of
&lt;a href="http://www.voidspace.org.uk/python/weblog/index.shtml"&gt;blather&lt;/a&gt; of late
about this supposedly-fiddly conversion process. Personally I've found
that working on the Windows operating system, the transition is a lot
smoother. Simply first install Cygwin, cd to the root of your
repository, and then:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find . -name .svn -exec rm -fr &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
hg init
hg add .
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;and you're done. There may be a few &lt;em&gt;nuances&lt;/em&gt; this doesn't address, but
come on, let's not expect miracles.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><guid>https://www.tartley.com/posts/2010/10/20/converting-any-repository-fom-svn-to-hg-on-windows.html</guid><pubDate>Wed, 20 Oct 2010 15:26:02 GMT</pubDate></item><item><title>My own competency</title><link>https://www.tartley.com/posts/2010/4/7/my-own-competancy.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;p&gt;My single degree was in Electronics and Physics, so although that
covered a considerable amount of digital electronics and CPU design,
I've pretty much picked up everything I know about software in my own
time or on the job. Consequentially, there are aspects of computer
science I feel I don't know as well as I could. I'm thinking especially
of areas which are less frequently used in practice, but often cited as
fundamental and important, such as compiler design.&lt;/p&gt;
&lt;p&gt;I stumbled on this '&lt;a href="http://www.indiangeek.net/wp-content/uploads/Programmer%20competency%20matrix.htm"&gt;programmer competancy
matrix&lt;/a&gt;'
the other week, and thought it would be a good first iteration of my own
syllabus of areas I'd like learn more about. So I cut'n'paste it into &lt;a href="http://spreadsheets.google.com/ccc?key=0AmOF8t-e3EyzdE1FdW5BcDFuVURKOEZSY1NfQW5NS1E&amp;amp;hl=en"&gt;a
spreadsheet&lt;/a&gt;,
and starting annotating it with how confident I feel in each different
area, along with the next steps I'll need to strengthen my knowledge in
each area.&lt;/p&gt;
&lt;p&gt;Startlingly but perhaps unsurprisingly, the tentative next step I
arrived at in almost all areas I feel deficient was to &lt;em&gt;finish working
through
&lt;a href="http://www.amazon.co.uk/Structure-Interpretation-Computer-Electrical-Engineering/dp/0262510871"&gt;SICP&lt;/a&gt;&lt;/em&gt;.
Alright, alright, my path is clear.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Software</category><guid>https://www.tartley.com/posts/2010/4/7/my-own-competancy.html</guid><pubDate>Wed, 07 Apr 2010 16:41:50 GMT</pubDate></item><item><title>Quote from Tim Bray</title><link>https://www.tartley.com/posts/2010/3/15/quote-from-tim-bray.html</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;The iPhone vision of the mobile Internet's future omits controversy,
sex, and freedom, but includes strict limits on who can know what and
who can say what. It's a sterile Disney-fied walled garden surrounded
by sharp-toothed lawyers. The people who create the apps serve at the
landlord's pleasure and fear his anger.&lt;/p&gt;
&lt;p&gt;I hate it.&lt;/p&gt;
&lt;p&gt;I hate it even though the iPhone hardware and software are great,
because freedom's not just another word for anything, nor is it an
optional ingredient.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tim Bray, &lt;a href="http://www.tbray.org/ongoing/When/201x/2010/03/15/Joining-Google"&gt;Now a No-Evil
Zone&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm increasingly aware that many of my lifestyle choices, from my
Android phone and my long-standing affection for Linux, through to my
choices of where I live and who I work for, are driven by my instinctive
dislike for being told what I can and can't do. I value my freedom.&lt;/p&gt;&lt;/div&gt;</description><category>Geek</category><category>Politics</category><guid>https://www.tartley.com/posts/2010/3/15/quote-from-tim-bray.html</guid><pubDate>Mon, 15 Mar 2010 14:12:29 GMT</pubDate></item></channel></rss>