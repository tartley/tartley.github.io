<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tartley.com (Posts about linux)</title><link>https://www.tartley.com/</link><description></description><atom:link href="https://www.tartley.com/categories/linux.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2022 &lt;a href="mailto:tartley @ the domain tartley dot com"&gt;Jonathan Hartley&lt;/a&gt; </copyright><lastBuildDate>Thu, 22 Sep 2022 04:39:01 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>New Laptop Time!</title><link>https://www.tartley.com/posts/new-laptop-time/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;My employer, Canonical, has a "bring your own hardware" policy, trusting that
their engineers would rather choose and administer their own personal laptops,
rather than put up with standardized remotely administered corporate hardware.&lt;/p&gt;
&lt;p&gt;My current much loved Thinkpad 460p has served faithfully since 2015, but is
showing its age, sometimes struggling under the workload. Plus, its integrated
graphics chipset doesn't have the power to play modern games with my kiddo.
Battlezone 98 runs fine, but Civilization VI (2016) is about the limit.&lt;/p&gt;
&lt;p&gt;This summer I received the three-year cash-in-hand bonus earmarked as a
"hardware refresh bonus". It's been many years since I've bought a laptop with
the attention to detail that comes with spending one's own money. Even the
current aging Thinkpad was a gift from a former employer. So it's been a decade
or more since I've seriously specced out a new laptop. This post exists as a
place to scribble down reminders of a few things I learned along the way.&lt;/p&gt;
&lt;p&gt;I have a few constraints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;About the same size as the current laptop's 14 inches, or maybe a tiny bit
  bigger.&lt;/li&gt;
&lt;li&gt;I work on Ubuntu Linux, so it has to run that comfortably.&lt;/li&gt;
&lt;li&gt;It should support modern gaming.&lt;/li&gt;
&lt;li&gt;Plenty of monitor ports.&lt;/li&gt;
&lt;li&gt;A headphone jack.&lt;/li&gt;
&lt;li&gt;Ability for me to open it up, swap out the battery, drives, RAM.&lt;/li&gt;
&lt;li&gt;3:2 display would be nice, but these are rare.&lt;/li&gt;
&lt;li&gt;A budget of $2,000.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reading around, I got sort-of up to speed on components.&lt;/p&gt;
&lt;h3&gt;CPU&lt;/h3&gt;
&lt;p&gt;The CPU buzz is around Intel's 12th generation (aka "Alder Lake"). These are
"hybrid" CPUs, combining large high performance cores with smaller high
efficiency cores on a single chip. They come in about 30 different variants,
with a naming convention that looks like, for example: &lt;code&gt;Intel Core i7-12700H&lt;/code&gt;.
This consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A brand, e.g "Intel Core"&lt;/li&gt;
&lt;li&gt;A modifier specifying a market segment, one of:&lt;ul&gt;
&lt;li&gt;i3 Casual use&lt;/li&gt;
&lt;li&gt;i5 Multitasking, light gaming&lt;/li&gt;
&lt;li&gt;i7 Gaming, content creators&lt;/li&gt;
&lt;li&gt;i9 Slightly faster, more parallel cores.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A single or double digit generation, eg the latest is "12".&lt;/li&gt;
&lt;li&gt;An SKU, eg the "700" above, a three or four digit number which roughly
  corresponds to the featureset or performance - larger is better. These are
  only comparable within a single generation, they adopt wildly different
  conventions in different generations.&lt;/li&gt;
&lt;li&gt;A single or double letter suffix, eg "H" for "high performance", taken from
  &lt;a href="https://www.intel.com/content/www/us/en/support/articles/000058567/processors/intel-core-processors.html"&gt;an idiotic irregular table&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The major alternative to an Intel processor is AMD. These aren't the current
season's darlings of the performance benchmarks, although they do include
several respectable contenders that might be great for my needs, as you can see
in the following performance comparison.&lt;/p&gt;
&lt;h4&gt;Benchmarks&lt;/h4&gt;
&lt;p&gt;These laptop CPU performance benchmarks are culled from
&lt;a href="https://www.cpubenchmark.net/laptop.html"&gt;www.cpubenchmark.net&lt;/a&gt;,
sorted by the benchmark score. I included the top 20, plus a handful of notable
others that I looked up along the way. The 'bench' column measures relative
performance under a variety of benchmark workloads which fully utilize all
cores.&lt;/p&gt;
&lt;p&gt;The number of cores is given as (p)performance + (e)fficiency, for hybrid processors.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CPU&lt;/th&gt;
&lt;th align="left"&gt;Cores&lt;/th&gt;
&lt;th align="right"&gt;Clock&lt;/th&gt;
&lt;th align="right"&gt;Cache&lt;/th&gt;
&lt;th align="right"&gt;Bench&lt;/th&gt;
&lt;th&gt;Price&lt;/th&gt;
&lt;th&gt;Laptop models, and other notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;i9-12900HX&lt;/td&gt;
&lt;td align="left"&gt;8p+8e&lt;/td&gt;
&lt;td align="right"&gt;5.0GHz&lt;/td&gt;
&lt;td align="right"&gt;30MB&lt;/td&gt;
&lt;td align="right"&gt;36&lt;/td&gt;
&lt;td&gt;$606&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-12800HX&lt;/td&gt;
&lt;td align="left"&gt;8p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;25MB&lt;/td&gt;
&lt;td align="right"&gt;35&lt;/td&gt;
&lt;td&gt;$457&lt;/td&gt;
&lt;td&gt;Thinkpad P16 ($2340).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i9-12950HX&lt;/td&gt;
&lt;td align="left"&gt;8p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;30MB&lt;/td&gt;
&lt;td align="right"&gt;34&lt;/td&gt;
&lt;td&gt;$590&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-12850HX&lt;/td&gt;
&lt;td align="left"&gt;8p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;25MB&lt;/td&gt;
&lt;td align="right"&gt;31&lt;/td&gt;
&lt;td&gt;$428&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i9-12900HK&lt;/td&gt;
&lt;td align="left"&gt;6p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;30&lt;/td&gt;
&lt;td&gt;$635&lt;/td&gt;
&lt;td&gt;Dell XPS 15 ($2950).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i9-12900H&lt;/td&gt;
&lt;td align="left"&gt;6p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;29&lt;/td&gt;
&lt;td&gt;$617&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-12700H&lt;/td&gt;
&lt;td align="left"&gt;6p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;27&lt;/td&gt;
&lt;td&gt;$457&lt;/td&gt;
&lt;td&gt;Dell XPS 17/15 ($2500), Acer Nitro 5, Onyx, Gazelle.&lt;br&gt;This CPU is what I ended up getting.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 9 6900HX&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;25&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Fastest AMD processor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-12650H&lt;/td&gt;
&lt;td align="left"&gt;6p+4e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;25&lt;/td&gt;
&lt;td&gt;$457&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i5-12600HX&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;25&lt;/td&gt;
&lt;td&gt;$284&lt;/td&gt;
&lt;td&gt;Fastest 12th gen i5. Suspiciously cheap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 9 PRO 6950H&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-12800H&lt;/td&gt;
&lt;td align="left"&gt;6p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;24&lt;/td&gt;
&lt;td&gt;$457&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 7 PRO 6850H&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Thinkpad P15v.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 9 6900HS&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ASUS ROG Zephyr G14.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 9 PRO 6950HS&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;24&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 7 PRO 6800H&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;23&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i9-11980HK&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;2.6GHz&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;23&lt;/td&gt;
&lt;td&gt;$583&lt;/td&gt;
&lt;td&gt;Fastest Intel 11th gen.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 7 6800HS CEd&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;23&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 9 5900HX&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;23&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i9-11950H&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;td align="right"&gt;2.6GHz&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;22&lt;/td&gt;
&lt;td&gt;$556&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(I skipped a bunch here)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-1280P&lt;/td&gt;
&lt;td align="left"&gt;6p+8e&lt;/td&gt;
&lt;td align="right"&gt;4.8GHz&lt;/td&gt;
&lt;td align="right"&gt;24MB&lt;/td&gt;
&lt;td align="right"&gt;20&lt;/td&gt;
&lt;td&gt;$482&lt;/td&gt;
&lt;td&gt;Best Framework.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Ryzen 7 5825U&lt;/td&gt;
&lt;td align="left"&gt;8&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;18&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Best Dell Inspiron 15".&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-1260P&lt;/td&gt;
&lt;td align="left"&gt;4p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;18MB&lt;/td&gt;
&lt;td align="right"&gt;17&lt;/td&gt;
&lt;td&gt;$438&lt;/td&gt;
&lt;td&gt;XPS 13 plus, X1 Carbon gen 10, Thinkpad P14.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i7-1250U&lt;/td&gt;
&lt;td align="left"&gt;2p+8e&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;12MB&lt;/td&gt;
&lt;td align="right"&gt;11&lt;/td&gt;
&lt;td&gt;$426&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i5-6200U&lt;/td&gt;
&lt;td align="left"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;2.8GHz&lt;/td&gt;
&lt;td align="right"&gt;3MB&lt;/td&gt;
&lt;td align="right"&gt;3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;My current Thinkpad T460.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Notice my current Thinkpad's processor added to the the very bottom of this list,
which is 10x slower than the CPU I ended up getting.&lt;/p&gt;
&lt;h3&gt;Graphics&lt;/h3&gt;
&lt;p&gt;There are plenty of otherwise fantastic laptops which don't include blazing
fast dedicated Nvidia or AMD graphics processors, but instead only come with
relatively humdrum graphics support integrated with the CPU. Although
integrated GPUs have improved massively in the last few years, this wouldn't be
fast enough to run modern games well.&lt;/p&gt;
&lt;p&gt;To compensate, I considered pairing such laptops with an external GPU enclosure
(eGPU), into which a top-of-the-line desktop GPU card can be plugged. I'm still
wistfully curious about this path, but in the end opted to do without this
complication.&lt;/p&gt;
&lt;p&gt;Here's a table of the top laptop GPUs, culled from
&lt;a href="https://gpu.userbenchmark.com/"&gt;gpu.userbenchmark.com&lt;/a&gt;. Unlike the CPU table,
this isn't the top N performers, because GPUs can get crazy fast and expensive,
so I'm looking for something middle-of-the-pack. It's just a selection of GPUs
I looked up while researching particular laptop models.&lt;/p&gt;
&lt;p&gt;The 'performance' column is the combined result of a variety of gaming
benchmarks. The 'position' column compares it against all other benchmarked
GPUs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GPU&lt;/th&gt;
&lt;th align="right"&gt;Performance&lt;/th&gt;
&lt;th align="right"&gt;Position&lt;/th&gt;
&lt;th&gt;Laptop models &amp;amp; other notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GeForce RTX 3080&lt;/td&gt;
&lt;td align="right"&gt;130&lt;/td&gt;
&lt;td align="right"&gt;24th&lt;/td&gt;
&lt;td&gt;System76 Onyx option.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GeForce RTX 3070Ti&lt;/td&gt;
&lt;td align="right"&gt;122&lt;/td&gt;
&lt;td align="right"&gt;27th&lt;/td&gt;
&lt;td&gt;system76 Onyx option.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GeForce RTX 3070&lt;/td&gt;
&lt;td align="right"&gt;114&lt;/td&gt;
&lt;td align="right"&gt;30th&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GeForce RTX 3060&lt;/td&gt;
&lt;td align="right"&gt;87&lt;/td&gt;
&lt;td align="right"&gt;58th&lt;/td&gt;
&lt;td&gt;Best XPS 17. Gazelle. Acer Nitro 5.&lt;br&gt;This is the GPU I ended up getting.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GeForce RTX 3050Ti&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td&gt;XPS 15 option.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GeForce RTX 3050&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td&gt;XPS 15 option.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD Radeon RX 6800S&lt;/td&gt;
&lt;td align="right"&gt;85&lt;/td&gt;
&lt;td align="right"&gt;58th&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AMD    RX 6700M&lt;/td&gt;
&lt;td align="right"&gt;79&lt;/td&gt;
&lt;td align="right"&gt;65th&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia RTX A1000 4GB GDDR6&lt;/td&gt;
&lt;td align="right"&gt;45&lt;/td&gt;
&lt;td align="right"&gt;114th&lt;/td&gt;
&lt;td&gt;Thinkpad P16(certified)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia T1200&lt;/td&gt;
&lt;td align="right"&gt;42&lt;/td&gt;
&lt;td align="right"&gt;118th&lt;/td&gt;
&lt;td&gt;Thinkpad P15v&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvidia GTX 1050Ti&lt;/td&gt;
&lt;td align="right"&gt;30&lt;/td&gt;
&lt;td align="right"&gt;144th&lt;/td&gt;
&lt;td&gt;My current Windows gaming desktop.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Intel Iris Xe&lt;/td&gt;
&lt;td align="right"&gt;17&lt;/td&gt;
&lt;td align="right"&gt;207th&lt;/td&gt;
&lt;td&gt;Integrated. Framework. XPS 13 Plus.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Intel HD 520&lt;/td&gt;
&lt;td align="right"&gt;4&lt;/td&gt;
&lt;td align="right"&gt;402nd&lt;/td&gt;
&lt;td&gt;Integrated. My current T460.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Notice the two 'integrated' entries at the bottom of the table, one of which is
my current laptop, a full 20x slower than the GPU I ended up getting.&lt;/p&gt;
&lt;h3&gt;Laptop models&lt;/h3&gt;
&lt;p&gt;With the above in mind, I read some reviews, and a few contenders emerged:&lt;/p&gt;
&lt;h4&gt;Framework&lt;/h4&gt;
&lt;p&gt;The Framework was massively tempting. It brings an entirely unpresedented
- some might hopefully say &lt;em&gt;revolutionary&lt;/em&gt; - focus on user-repair and
upgradability. Rather than soldering and gluing the whole thing together,
all the Framework's components, up to and including the motherboard and
screen, are replaceable using a single screwdriver. This is deeply appealing
for geeks, who want to be able to repair or upgrade.&lt;/p&gt;
&lt;p&gt;The downside that gave me pause is it is only available with integrated
Intel-powered graphics. If they had a model including the vastly superior
Nvidia or AMD accellerated graphics, I would have just bought one months ago,
instead of prevaricating. But that complication, coupled with the fact that the
Framework's performance is only mid-range for a 2022 model, put me off
sufficiently to look around at other options.&lt;/p&gt;
&lt;h4&gt;Dell XPS 13 plus&lt;/h4&gt;
&lt;p&gt;The Dell XPS 13 plus looks wonderful, with official Ubuntu verification, no
less, but just isn't physically big enough for me, and is noticeably
underpowered. And the Dell 15 inch models seem way overpriced, for the spec,
easily exceeding my $2,000 budget.&lt;/p&gt;
&lt;h4&gt;HP One Dev&lt;/h4&gt;
&lt;p&gt;The HP One Dev looks like a fabulous machine, a colleague just got one and is
very happy with it. But again, it only has integrated graphics.&lt;/p&gt;
&lt;h4&gt;MacBook Pro&lt;/h4&gt;
&lt;p&gt;I considered this, repaved to run Ubuntu, of course, but to be honest, as
exquisite as the hardware was at one point, it seems somewhat stagnant and
directionless now, ten years later. Not unimpressive, but doesn't really grab
me.&lt;/p&gt;
&lt;h4&gt;System76&lt;/h4&gt;
&lt;p&gt;I looked at a whole bunch of other laptops at this point, scouring the "best
gaming laptops of 2022" lists at Toms Hardware and elsewhere. Eventually my
attention was drawn to System76, who, on reflection, should have been folks I
checked out earlier in the process.&lt;/p&gt;
&lt;p&gt;The Oryx is just a few hundred over my budget, even with the current $300 off.
But a tricked-out Gazelle seems to check all the boxes,&lt;/p&gt;
&lt;p&gt;They sell with Linux-pre-installed, and their website includes various
&lt;a href="https://support.system76.com/articles/nvidia-nvs"&gt;handy little write-ups&lt;/a&gt;
of exactly how to iron over the wrinkles in getting Nvidia's famously
un-cooperative opaque binary drivers to work smoothly on Linux. They have
CPUs and GPUs that are quite highly-placed in the above tables, the screen
is magic.&lt;/p&gt;
&lt;p&gt;There are downsides. The keyboard is reputedly mediochre - but I almost always
am using a USB mechanical keyboard anyhow. With such greedy components, the
battery life kinda sucks when the machine is busy. But, to be frank, the only
time I've run my current laptop away from my desk in the last 12 months is...
never? So I guess I don't care, except for once every six months when I attend
a work event at offices, hotels or conference centers.&lt;/p&gt;
&lt;p&gt;So this is what I ordered.&lt;/p&gt;
&lt;p&gt;But I did that thing where I order it with minimal RAM and SSD storage, so that
I can replace them with my own parts. So I'll have some screwdriver work to do
after it arrives. But the payoff is that I save about $150 by paying market
rates for these components. In fact I already have a
&lt;a href="https://www.amazon.com/WD_Black-SN850-Internal-Gaming-Solid/dp/B0B7CPSN2K"&gt;tremendous SSD&lt;/a&gt;
I can use, leftover from this year's Chia cryptocurrency farming experiments,
so that part is free. This means I can stay within my $2,000 budget, with $9 to
spare after shipping and taxes.&lt;/p&gt;
&lt;h3&gt;Memory&lt;/h3&gt;
&lt;p&gt;It's generally possible to just buy whatever RAM is recommended by your vendor.
But the most reliable and cheapest RAM will often be the slowest, or at least
the one running at a clock speed which is most widely supported by different
motherboards. In order to get the &lt;em&gt;fastest&lt;/em&gt; RAM for our particular laptop, we
need to understand a few things.&lt;/p&gt;
&lt;h4&gt;Physical form factor&lt;/h4&gt;
&lt;p&gt;The current standard for RAM is DDR4. For laptops, the slim physical form
factor is known as SoDIMM. A single circuit board of memory chips is a
&lt;em&gt;module&lt;/em&gt;. A module connects into a motherboard &lt;em&gt;slot&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;DDR5 is supported by Intel's 12th generation processors, and AMD's newest Ryzen
7000 series. This uses a different physical connection on the motherboard, and
is rare thus far, outside of systems above my budget. So I'm looking for DDR4.&lt;/p&gt;
&lt;h4&gt;Ranks &amp;amp; Channels&lt;/h4&gt;
&lt;p&gt;A module contains from one to eight 64-bit wide logical &lt;em&gt;blocks&lt;/em&gt; of data storage
(single, dual, quad or octal &lt;em&gt;rank&lt;/em&gt;.) The chips on a module provide x1, x2, x4
or x8 &lt;em&gt;banks&lt;/em&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;number of chips x chip banks / 64 = module rank
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;e.g. Using sixteen x4 chips will provide a single rank of memory on the module
(16x4/64=1).&lt;/p&gt;
&lt;p&gt;Whereas using 32 x8 chips will provide a module of 4 ranks (32x8/64=4).&lt;/p&gt;
&lt;p&gt;This is sometimes annotated on the module using a notation like 1Rx4, as in one
rank of x4 chips.&lt;/p&gt;
&lt;p&gt;The reason this matters is that access to ranks is interleaved, so multiple
ranks can provide access to data at a higher rate than a single rank. But in
order to take advantage of this, the motherboard must provide a commensurate
number of memory access channels.&lt;/p&gt;
&lt;p&gt;The
&lt;a href="https://tech-docs.system76.com/models/gaze17/README.html"&gt;datasheet for my Gazelle&lt;/a&gt;
says the motherboard has two slots for RAM, and supports dual-channel access.
This could be fully utilized by either inserting a single dual-rank module
(which is more expensive), or, as in the timeworn heuristic, by inserting two
half-sized single rank modules.&lt;/p&gt;
&lt;h4&gt;Clock frequencies and latency&lt;/h4&gt;
&lt;p&gt;RAM has a clock frequency, measured in thousands of MHz, but "double data rate"
chips transfer data on both the clock's rising and falling edges, so the speed
of transfer is better measured in mega-transfers per second (MT/s), the higher
the better.&lt;/p&gt;
&lt;p&gt;However, it takes more than one clock cycle to perform an action. These latency
values are sometimes quoted as a series of four integers - the number of clock
cycles to perform particular operations, e.g. 18-18-18-43. But these are often
abbreviated to just the first number, representing read access time, known as
"CAS Latency" (CL), eg. CL 18, which tends to be representative. The lower this
number is, the better.&lt;/p&gt;
&lt;p&gt;The actual performance of the memory is determined by the product of a clock
cycle duration (eg. 1ns at 1000MHz) and the latency number (e.g. 1ns * 18 =
18ns)&lt;/p&gt;
&lt;p&gt;Further, the motherboard needs to support the RAM's clock speed. In practice,
the motherboard will negotiate with the inserted modules to find a commonly
supported frequency, the same or less than the minimum of the rated memory
access frequencies of the memory, the motherboard, and the CPU. using an
over-complicated and hard-to-predict process controlled by BIOS settings. I
have no experience with this but it sounds well worth avoiding altogether by
making sure we get RAM modules with a rated frequency (their maximum) that
exactly matches the advertised clock frequency of our motherboard.&lt;/p&gt;
&lt;p&gt;For my new Gazelle,
&lt;a href="https://tech-docs.system76.com/models/gaze17/README.html"&gt;the manual&lt;/a&gt;
says that is 3,200MHz.&lt;/p&gt;
&lt;h4&gt;Availability, pricing and scams.&lt;/h4&gt;
&lt;p&gt;Finding CL26 latency RAM at 3,200MHz is easy, for around $70. For lower
latencies the price goes up to about $375 for CL16, but that isn't even in
stock anywhere.&lt;/p&gt;
&lt;p&gt;At one point, after much searching, I found some CL16 on newegg.com:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Memory on sale in newegg - scam" src="https://www.tartley.com/files/2022/memory-on-sale.webp"&gt;&lt;/p&gt;
&lt;p&gt;And it is only $128! Carefully checking the specs, including those on the
manufacturer's site, using the shown model number 'CMSX32GX4M2A3000C16',
this is exactly what we want. 2x16GB at 3200MT/s at CL16.&lt;/p&gt;
&lt;p&gt;While checking it out, I clicked around a bit, and at one point found:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bad review on newegg" src="https://www.tartley.com/files/2022/bad-review-on-newegg.webp"&gt;&lt;/p&gt;
&lt;p&gt;along with a number of other negative reviews, stating that they'd been sent
memory modules that were fake, ie. just imitations of the purported reputable
manufacturer, they didn't work at the advertised clock speeds, and the seller
had gone dark on them, taking weeks to respond to queries, and not sending
replacements until NewEgg got involved. Seems wisest to skip this.&lt;/p&gt;
&lt;p&gt;Eventually I found an alternative:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Memory on sale in newegg - legit" src="https://www.tartley.com/files/2022/memory-on-sale-legit.webp"&gt;&lt;/p&gt;
&lt;p&gt;Yes! DDR4 in a SoDIMM package, 2x16GB modules at 3,200MHz and 18CL. The latency
isn't quite as good, but it sounds legit, so I'll take it!&lt;/p&gt;
&lt;p&gt;And with that, I'm done. Now just awaiting the deliveries to arrive...&lt;/p&gt;</description><category>hardware</category><category>journal</category><category>linux</category><guid>https://www.tartley.com/posts/new-laptop-time/</guid><pubDate>Wed, 21 Sep 2022 16:59:02 GMT</pubDate></item><item><title>Creating Animated Meme GIFs on the Command-Line</title><link>https://www.tartley.com/posts/creating-animated-meme-gifs-on-the-command-line/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;Got sick of navigating the limitations of various online services to create
animated gif memes, finally figured out how to do it manually. Not a universal
process, just what worked for my situation. (Which is Ubuntu 21.10, "Impish".)&lt;/p&gt;
&lt;p&gt;All of of the ffmpeg invocations could probably be combined into one, but I
show the commands as I used them, as I was figuring each step out.&lt;/p&gt;
&lt;h4&gt;1. Download a video&lt;/h4&gt;
&lt;p&gt;Starting from a video on YouTube:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/6-gJMs6DwuE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;To download this locally,
&lt;a href="https://github.com/ytdl-org/youtube-dl"&gt;install &lt;code&gt;youtube-dl&lt;/code&gt;&lt;/a&gt;,
hit the YouTube &lt;em&gt;share&lt;/em&gt; button to grab the video's encoded URL,
and:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;youtube-dl https://youtu.be/6-gJMs6DwuE -o Ash.mp4
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This gives me an 850KB .mp4 video file.&lt;/p&gt;
&lt;h4&gt;2. Split&lt;/h4&gt;
&lt;p&gt;I only want the final few seconds. To remove the start of the video,
keeping from 6.5 seconds until the end:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ffmpeg -hide_banner -i Ash.mp4 -acodec copy -vcodec libx264 -ss 00:00:06.5 Ash-split.mp4
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Args to ffmpeg are position sensitive. Specifying '-ss' (to split the file)
before the input ('-i') can't create the split at an accurate location, since
it has to guess whereabouts in the file the given timestamp will occur. But
putting it after the input (as done here) means it can split accurately on the
given timestamp, since the file has been processed by the time this arg gets
actioned, so accurate timestamp/frame conversion is known, at the cost of
having had to process even the parts of the video that are then discarded.&lt;/p&gt;
&lt;p&gt;Vcodec of libx264 is specified because, according to stackoverflow,
"&lt;a href="https://stackoverflow.com/questions/5651654/ffmpeg-how-to-split-video-efficiently#comment85070704_13289426"&gt;scenes in mp4 are broken&lt;/a&gt;", whatever that means,
and specifying "copy", as most people do, gives me an output with no video,
only audio.&lt;/p&gt;
&lt;p&gt;This results in a three second, 217KB .mp4 video file. (the following is just an
image of it).&lt;/p&gt;
&lt;p&gt;&lt;img alt="ash-split.webp" src="https://www.tartley.com/files/2021/ash-split.webp"&gt;&lt;/p&gt;
&lt;h4&gt;3. Crop&lt;/h4&gt;
&lt;p&gt;To crop out the black bars from the top and bottom:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ffmpeg -hide_banner -i Ash-split.mp4 -vf 'crop=iw:365' Ash-split-crop.mp4
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, we crop it to the input width "iw", and 365 high. In the absense of
any offset ordinates for the crop, ffmpeg defaults to centering them, so this
365 pixels are taken from the (spatial, vertical) middle of the video, which is
exactly what we want.&lt;/p&gt;
&lt;p&gt;This results in a three second, 220KB .mp4 video file.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ash-split-crop.webp" src="https://www.tartley.com/files/2021/ash-split-crop.webp"&gt;&lt;/p&gt;
&lt;h3&gt;4. Resize and convert to gif&lt;/h3&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="s s-Atom"&gt;ffmpeg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;hide_banner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;Ash&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;split&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;crop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;mp4&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;vf&lt;/span&gt; &lt;span class="s s-Atom"&gt;'scale=512:-1'&lt;/span&gt; &lt;span class="nv"&gt;Ash&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;split&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;crop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="s s-Atom"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;gif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This results in a grainy-but-passable three second 750KB animated .gif:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ash-split-crop-resize.gif" src="https://www.tartley.com/files/2021/ash-split-crop-resize.gif"&gt;&lt;/p&gt;
&lt;p&gt;The file size can be smaller, if you care, most easily by splitting a shorter
video clip, reducing the frame rate, or reducing the 'scale' in this step.&lt;/p&gt;
&lt;p&gt;Alternately, this could be done using ImageMagik's 'convert', but the result
of that was a very large (10MB) file and played very slowly, and I wasn't
immediately sure how to fix that.&lt;/p&gt;
&lt;h3&gt;5. Add text&lt;/h3&gt;
&lt;p&gt;Using Imagemagik's 'convert':&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;convert \
    Ash-split-crop-resize.gif \
    -coalesce \
    -font impact -pointsize 36 -fill white -stroke black -strokewidth 2 \
    -gravity north -annotate +0+0 'I can''t lie about your chances, but' \
    -gravity south -annotate +0+0 'you have my sympathies' \
    -layers Optimize \
    Ash-split-crop-resize-text.gif
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The '-coalesce' option removes all the .gif optimizations, then we apply the
text labels, then the '-layers' option re-applies optimizations. Without this
dance, the text is all twitchy and messy.&lt;/p&gt;
&lt;p&gt;VoilÃ . Imagine sending it to a co-worker who is taking on a difficult task,
like making changes to that thorny section of the codebase that nobody likes:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ash-split-crop-resize-text.gif" src="https://www.tartley.com/files/2021/ash-split-crop-resize-text.gif"&gt;&lt;/p&gt;</description><category>image</category><category>linux</category><category>terminal</category><category>til</category><category>video</category><category>youtube</category><guid>https://www.tartley.com/posts/creating-animated-meme-gifs-on-the-command-line/</guid><pubDate>Wed, 08 Dec 2021 21:32:10 GMT</pubDate></item><item><title>Download audio from YouTube</title><link>https://www.tartley.com/posts/download-audio-from-youtube/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;Install ffmpeg:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt install ffmpeg
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install &lt;code&gt;youtube-dl&lt;/code&gt;, a tool to download YouTube videos. Using &lt;code&gt;apt&lt;/code&gt; installs a
version that's too old to work, so:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;pip install --user pipsi
pipsi install youtube-dl
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;The best way&lt;/h3&gt;
&lt;p&gt;Tell youtube-dl to download the audio:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;youtube-dl -x --audio-format&lt;span class="o"&gt;=&lt;/span&gt;best URL
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; downloads just the audio part.&lt;/li&gt;
&lt;li&gt;Audio format defaults to 'best', but can be "aac", "flac", "mp3", "m4a",
  "opus", "vorbis", or "wav".&lt;/li&gt;
&lt;li&gt;URL is an encoded version of the video URL (youtu.be/XXX), obtained by
  hitting the 'share' button on the youtube page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I understand it, it downloads whatever audio format YouTube provides,
then converts it locally using ffmpeg, so you're not really getting the
benefit of those lossless formats - mp3 is fine for
&lt;a href="https://www.youtube.com/watch?v=VSJWvzLuGz8"&gt;my&lt;/a&gt;
&lt;a href="https://www.youtube.com/watch?v=nyU1Pt2IXyE"&gt;needs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;My previous inferior way&lt;/h3&gt;
&lt;p&gt;This method is worse because it downloads the whole video file before
extracting audio locally, and the download gets throttled by YouTube in some
way, which of late is very slow indeed.&lt;/p&gt;
&lt;p&gt;Download the video from YouTube:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;youtube-dl URL
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This results in a webm file. I have no idea what that is, and am relieved
to discover that converting it into an mp3 requires just:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ffmpeg -i MyVideoFile -vn MyAudioFile.mp3
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;-vn&lt;/code&gt; disables video in the output.&lt;/p&gt;</description><category>command-line</category><category>linux</category><category>music</category><category>til</category><category>youtube</category><guid>https://www.tartley.com/posts/download-audio-from-youtube/</guid><pubDate>Thu, 13 May 2021 16:18:33 GMT</pubDate></item><item><title>LXD for Development Environments.</title><link>https://www.tartley.com/posts/lxd-for-dev-env/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;&lt;a href="https://twitter.com/hjwp/status/1249636076660174849"&gt;@hjwp asks&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I would be interested in seeing some example lxd config files,
bash command history when creating, etc?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here goes then.&lt;/p&gt;
&lt;p&gt;I have one LXD container running for each nontrivial development project I'm
working on.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$ lxc ls
&lt;span class="p"&gt;|&lt;/span&gt;    NAME     &lt;span class="p"&gt;|&lt;/span&gt;  STATE  &lt;span class="p"&gt;|&lt;/span&gt;        IPV4         &lt;span class="p"&gt;|&lt;/span&gt; IPV6 &lt;span class="p"&gt;|&lt;/span&gt;   TYPE    &lt;span class="p"&gt;|&lt;/span&gt; SNAPSHOTS &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; devicegw    &lt;span class="p"&gt;|&lt;/span&gt; RUNNING &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.44.99.228 &lt;span class="o"&gt;(&lt;/span&gt;eth0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; CONTAINER &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; ident       &lt;span class="p"&gt;|&lt;/span&gt; RUNNING &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.44.99.4 &lt;span class="o"&gt;(&lt;/span&gt;eth0&lt;span class="o"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; CONTAINER &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; revs        &lt;span class="p"&gt;|&lt;/span&gt; RUNNING &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.44.99.151 &lt;span class="o"&gt;(&lt;/span&gt;eth0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; CONTAINER &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; siab        &lt;span class="p"&gt;|&lt;/span&gt; RUNNING &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.44.99.128 &lt;span class="o"&gt;(&lt;/span&gt;eth0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; CONTAINER &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; tartley-com &lt;span class="p"&gt;|&lt;/span&gt; RUNNING &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.44.99.161 &lt;span class="o"&gt;(&lt;/span&gt;eth0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; CONTAINER &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Out of the gate we see one source of confusion. "LXD", the daemon, is a
newer project that builds on top of "LXC" the containers. However the user
interface to all the new LXD-goodness is through a command-line called "lxc",
which replaces the older command line tool called "lxd". :-/&lt;/p&gt;
&lt;p&gt;To create a new one:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$ &lt;span class="nb"&gt;time&lt;/span&gt; lxc launch ubuntu:16.04 -p default -p jhartley demo
Creating demo
Starting demo
real    0m9.593s
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once created, they take about 3 seconds to stop and 0.5 seconds to start.&lt;/p&gt;
&lt;p&gt;Those "-p" options cause the container to use two &lt;em&gt;profiles&lt;/em&gt;. They are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;default&lt;/em&gt; profile, which I've never touched. It's just doing whatever it
   always does.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;jhartley&lt;/em&gt; profile, I created in a one-off step by running a Bash script
   derived from instructions one of my colleagues passed around. I'll describe
   it at the end.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once a new container is up, we can execute commands directly on it:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$ lxc &lt;span class="nb"&gt;exec&lt;/span&gt; demo hostname
demo
$ lxc &lt;span class="nb"&gt;exec&lt;/span&gt; demo whoami
root
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or SSH to them using their IP address:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;jhartley@t460 $ lxc ls demo
&lt;span class="p"&gt;|&lt;/span&gt; NAME &lt;span class="p"&gt;|&lt;/span&gt;  STATE  &lt;span class="p"&gt;|&lt;/span&gt;        IPV4         &lt;span class="p"&gt;|&lt;/span&gt; IPV6 &lt;span class="p"&gt;|&lt;/span&gt;   TYPE    &lt;span class="p"&gt;|&lt;/span&gt; SNAPSHOTS &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; demo &lt;span class="p"&gt;|&lt;/span&gt; RUNNING &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;.44.99.162 &lt;span class="o"&gt;(&lt;/span&gt;eth0&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; CONTAINER &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;
jhartley@t460 $ ssh &lt;span class="m"&gt;10&lt;/span&gt;.44.99.162
...
Warning: Permanently added &lt;span class="s1"&gt;'10.44.99.162'&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ECDSA&lt;span class="o"&gt;)&lt;/span&gt; to the list of known hosts.
Welcome to Ubuntu &lt;span class="m"&gt;16&lt;/span&gt;.04.6 LTS &lt;span class="o"&gt;(&lt;/span&gt;GNU/Linux &lt;span class="m"&gt;5&lt;/span&gt;.4.0-25-generic x86_64&lt;span class="o"&gt;)&lt;/span&gt;
jhartley@demo $
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Better than using IP addresses, you can run a DNS server to recognize
&lt;code&gt;{containername}.lxd&lt;/code&gt; hostnames. (This part is from
&lt;a href="https://discuss.linuxcontainers.org/t/a-way-to-resolve-container-lxd-from-host-in-all-cases/3698"&gt;here&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Find your lxd bridge IPv4 address&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;lxc network show lxdbr0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create file &lt;code&gt;/etc/systemd/network/lxd.network&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;[Match]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;lxdbr0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;[Network]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;IPADDR/24&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;DNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;IPADDR&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="na"&gt;Domains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;~lxd&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where IPADDR is the lxdbr0 IPv4 address.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; systemd-networkd
sudo reboot now
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;jhartley@t460 $ ssh demo.lxd
jhartley@demo $ &lt;span class="c1"&gt;# \o/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One nice thing is that DNS works both from the host and on the containers,
so your services can be configured by default to talk to each other at
SERVICE1.lxd, SERVICE2.lxd. Then running them in containers on your host
they would just find each other. We don't actually do this, but it seems
trivially easy to do. I should ask why we don't.&lt;/p&gt;
&lt;p&gt;In practice I wrap up the ssh command with my accumulated foibles:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;jhartley@demo $ &lt;span class="nb"&gt;type&lt;/span&gt; -a lssh
lssh is a &lt;span class="k"&gt;function&lt;/span&gt;
lssh &lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;TERM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;xterm-color ssh -A -t &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;.lxd"&lt;/span&gt; -- &lt;span class="s2"&gt;"cd &lt;/span&gt;&lt;span class="nv"&gt;$PWD&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exec &lt;/span&gt;&lt;span class="nv"&gt;$SHELL&lt;/span&gt;&lt;span class="s2"&gt; -l"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I forget why -A and -t were required. The rest is mostly just to start the
shell on the container in the same directory as I was in on the host. There
is probably a simpler way.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The booooooring bits:&lt;/p&gt;
&lt;p&gt;When we started the container, we mentioned
&lt;a href="https://www.tartley.com/files/2020/setup-lxd-profile.sh"&gt;a one-off setup script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The script does a few things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creates a new key pair specifically to SSH to the container.&lt;/li&gt;
&lt;li&gt;Creates the custom &lt;em&gt;jhartley&lt;/em&gt; profile, which causes all containers started
   with it to:&lt;/li&gt;
&lt;li&gt;Create a new user on the container with user and group ID mapped to
      those of my user on the host, presumably so that file permissions work
      for...&lt;/li&gt;
&lt;li&gt;Mount my $HOME directory on the container. Might not always be what you
      want, but works for me right now.&lt;/li&gt;
&lt;li&gt;Doubtless due to my own misunderstanding somewhere, in order to get working
   IPv4 connections to my containers, I had to disable IPv6 connections to
   them.&lt;/li&gt;
&lt;/ol&gt;</description><category>geek</category><category>linux</category><category>software</category><category>terminal</category><guid>https://www.tartley.com/posts/lxd-for-dev-env/</guid><pubDate>Mon, 20 Apr 2020 18:57:47 GMT</pubDate></item><item><title>Dina font as an OTF.</title><link>https://www.tartley.com/posts/dina-as-otf/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;The Dina font, converted to an OpenType Font (see screenshots at the bottom of
the page):&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://www.tartley.com/files/2020/Dina-v2.93-otf.tar.gz"&gt;&lt;span class="emoji"&gt;ð¦&lt;/span&gt; Dina-v2.93-otf.tar.gz&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://gitlab.gnome.org/GNOME/pango/issues/386"&gt;Pango dropped support for naive bitmap fonts&lt;/a&gt;
in v1.44 -- i.e. from Ubuntu 20.04, &lt;em&gt;Focal&lt;/em&gt;, onwards.&lt;/p&gt;
&lt;p&gt;So all bitmap fonts need to be converted into a format that will render,
ie. a vector format such as OpenType that allows bitmaps to be embedded.
(Not a conversion of the bitmap into an outline, losing the advantages of
the crisp, tiny bitmaps.)&lt;/p&gt;
&lt;p&gt;For most bitmap fonts, this conversion will be done for you, by packagers
or font authors.&lt;/p&gt;
&lt;p&gt;But you'll need to do it yourself for any peripheral fonts that you love
more than your distribution does. Here's how I did it for my
&lt;a href="http://www.dcmembers.com/jibsen/download/61/"&gt;beloved Dina&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;1. Identify the font file.&lt;/h3&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;fc-list &lt;span class="p"&gt;|&lt;/span&gt; grep Dina
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. Convert.&lt;/h3&gt;
&lt;p&gt;Use either command line tools, or fontforge.&lt;/p&gt;
&lt;h4&gt;2.1 Using fontforge&lt;/h4&gt;
&lt;p&gt;A GUI tool.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open up fontforge, paste the font path in.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File / generate fonts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Left dropdown: "OpenType (CFF)"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Right dropdown: "In TTF/OTF"&lt;/li&gt;
&lt;li&gt;Generate&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The results have some problems. I'm using it in gnome-terminal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People converting other fonts report issues with ugly gaps between
  characters. But I don't see that, perhaps because it's a monospace font?&lt;/li&gt;
&lt;li&gt;The converted font is invisible in font selection dialogs, making it look
  like the process did not work. But once selected, by clicking around blindly,
  then the font displays fine in applications.&lt;/li&gt;
&lt;li&gt;Using a font size which is not defined in the font displays a blank terminal,
  instead of falling back to some other font.&lt;/li&gt;
&lt;li&gt;Using ctrl-+/- to select font sizes cycles through three of the four
  defined sizes. I don't know why it skips one. But all four are usable if
  you explicitly select a size.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2.2 Using command-line tools&lt;/h3&gt;
&lt;p&gt;The process is described at
https://fedoraproject.org/wiki/BitmapFontConversion.&lt;/p&gt;
&lt;p&gt;Ubuntu's released version of fonttosfnt (1.0.4) produces unusable results:
* Only the 1st and 2nd smallest font sizes are preserved.
* In the 2nd smallest size, all variations are too bold, so that 'bold'
  variations look 'double-bold'. (Italics looks really ugly too, this may
  just be a result of the enboldening.)&lt;/p&gt;
&lt;p&gt;TODO: Consider trying the latest fonttosfnt (1.1.0)
https://gitlab.freedesktop.org/xorg/app/fonttosfnt
or at least filing an issue there to try and get some help.&lt;/p&gt;
&lt;h3&gt;3. Install&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Copy to &lt;code&gt;~/.local/share/fonts&lt;/code&gt; (or &lt;code&gt;~/.fonts&lt;/code&gt;, right?)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fc-cache -f&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The result&lt;/h3&gt;
&lt;p&gt;I know, it doesn't look like much.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.tartley.com/files/2020/terminal-dina-small-ll.png"&gt;&lt;/p&gt;
&lt;p&gt;But compare it with a regular vector font. Here's Ubuntu Mono, the &lt;em&gt;best&lt;/em&gt; of
the vector fonts I could find at these sizes. Blurry and inconsistent and hard
to read:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://www.tartley.com/files/2020/terminal-ubuntumono-small-ll.png"&gt;&lt;/p&gt;</description><category>fonts</category><category>linux</category><category>terminal</category><guid>https://www.tartley.com/posts/dina-as-otf/</guid><pubDate>Wed, 05 Feb 2020 20:51:33 GMT</pubDate></item><item><title>Conky.</title><link>https://www.tartley.com/posts/conky/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;In the typical mad-scientist thrills-per-minute that is the Linux way,
adding a CPU meter to my desktop involved crafting
&lt;a href="https://www.tartley.com/files/2020/conky.conf"&gt;my own conky configuration file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As always, building your own is a chore that crops up when you least expect
it. But on the other hand, the opportunity for functional and aesthetic
work results in something artisnally crafted to exactly meet your own personal
needs. Something you can feel a little pride about. An elegant weapon,
for a more... civilized age.&lt;/p&gt;
&lt;p&gt;&lt;img alt="An elegant weapon, for a more... civilised age." src="https://www.tartley.com/files/2020/conky.jpg"&gt;&lt;/p&gt;</description><category>linux</category><guid>https://www.tartley.com/posts/conky/</guid><pubDate>Wed, 15 Jan 2020 22:09:13 GMT</pubDate></item><item><title>Installing Colout</title><link>https://www.tartley.com/posts/installing-colout/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;&lt;a href="http://nojhan.github.io/colout/"&gt;Colout&lt;/a&gt; is amazing, I use it all the time.&lt;/p&gt;
&lt;p&gt;But &lt;code&gt;pip install colout&lt;/code&gt; from PyPI is broken, and has been for many months,
due to a typo in the
&lt;a href="https://pypi.org/project/colout/"&gt;latest (v0.5) PyPI release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've tried to contact the author, with email and
&lt;a href="https://github.com/nojhan/colout/issues/101i"&gt;issues&lt;/a&gt; on the
&lt;a href="https://github.com/nojhan/colout/issues"&gt;Colout Github project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This has had no effect, although I see the author has made substantial commits
to the Github project in that time, including fixing this problem and tagging a
new v0.6 version, although has not released any of that to PyPI.&lt;/p&gt;
&lt;p&gt;So, in increasing order of desirability, you can either:&lt;/p&gt;
&lt;p&gt;Clone the latest repo &lt;a href="https://github.com/nojhan/colout"&gt;from Github&lt;/a&gt;, and
install from that:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="c1"&gt;# cd to the clone, then&lt;/span&gt;
python3 -m pip install --user .
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or, pip install the version I uploaded to PyPI, which is a straight copy of the
latest Github at the time:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;pip install --user colout-fix
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or, best of all, pip install straight from the original Github repo:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;pip install --user git+git://github.com/nojhan/colout.git
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that, throughout, we're using &lt;code&gt;--user&lt;/code&gt;, so that you can install
development tools like this system-wide for the current user, without needing a
virtualenv, without needing root access, and without modifying your installed
Python system libraries.&lt;/p&gt;</description><category>geek</category><category>linux</category><category>terminal</category><guid>https://www.tartley.com/posts/installing-colout/</guid><pubDate>Sat, 26 Jan 2019 00:40:55 GMT</pubDate></item><item><title>Running Multiple Firefox Profiles on Linux</title><link>https://www.tartley.com/posts/running-multiple-firefox-profiles/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;I recently switched from Chrome to Firefox. It's so &lt;em&gt;fast&lt;/em&gt;, and easier
to trust that Mozilla has my privacy and interests at heart than Google
does.&lt;/p&gt;
&lt;p&gt;I want to run a second profile at work, to keep a distinct set of open
tabs, bookmarks, and the like. Here's how I did it:&lt;/p&gt;
&lt;p&gt;Close all Firefox windows. Run the Profile Manager with &lt;code&gt;firefox -p&lt;/code&gt;.
Create a second profile.&lt;/p&gt;
&lt;p&gt;Open Firefox and find the directories your profiles live by browsing to
&lt;code&gt;about:profiles&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Substitute those directories into this firefox.desktop file, where I've
marked 'XXX':&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="cp"&gt;# Gnome3 .desktop file for Firefox with multiple profiles&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Browse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;GenericName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Browser&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Keywords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Internet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;WWW&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Browser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Web&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Explorer&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;MultipleArgs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GNOME&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;GTK&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Network&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;WebBrowser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Actions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;MimeType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xhtml&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rdf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jpeg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;webm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xpinstall&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;StartupNotify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;XXX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mozilla&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;firefox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;XXX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Save the above as firefox.desktop and install using:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$ desktop-file-validate firefox.desktop
$ desktop-file-install --dir&lt;span class="o"&gt;=&lt;/span&gt;.local/share/applications firefox.desktop
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This results in a Firefox icon in your applications menu that defaults
to whichever profile you mark as default in the ProfileManager, but
right clicking lets you select the home or work profile explicitly. Open
each, and change the theme in one of them so the windows are visually
distinct.&lt;/p&gt;
&lt;p&gt;Tested on Ubuntu, RHEL 7.3, probably works on all Gnome3 desktops.&lt;/p&gt;</description><category>geek</category><category>linux</category><guid>https://www.tartley.com/posts/running-multiple-firefox-profiles/</guid><pubDate>Thu, 22 Feb 2018 00:40:55 GMT</pubDate></item><item><title>Automate Gnome keybindings</title><link>https://www.tartley.com/posts/automate-gnome-keybindings/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;Sick of manual GUI twiddling to fix inconsistent keybindings on various
computers. Solved once and for all, by a new script in my personal
workstation setup bucket:&lt;/p&gt;
&lt;p&gt;Warning: This:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;works great on RHEL,&lt;/li&gt;
&lt;li&gt;doesn't all work on Ubuntu&amp;lt;=17.04, I suspect because Unity has
    it's own set of keybinds that are defined elsewhere.&lt;/li&gt;
&lt;li&gt;works great on Ubuntu 17.10. especially if you go in manually to
    disable the built-in keybinding for Super-V, which displays the
    calendar and notifications window, which shadows my 'toggle window
    maximize vertically'.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;kb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'org.gnome.desktop.wm.keybindings'&lt;/span&gt;

&lt;span class="c1"&gt;# Switcher, between windows not apps, uses alt-tab and alt-grave&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; switch-windows &lt;span class="s2"&gt;"['Tab']"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; switch-windows-backward &lt;span class="s2"&gt;"['grave', 'Tab']"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; switch-applications &lt;span class="s2"&gt;"[]"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; switch-applications-backward &lt;span class="s2"&gt;"[]"&lt;/span&gt;

&lt;span class="c1"&gt;# Window maximize toggle, super-up&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; maximize &lt;span class="s2"&gt;"[]"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; toggle-maximized &lt;span class="s2"&gt;"['Up']"&lt;/span&gt;

&lt;span class="c1"&gt;# Window maximize vertically toggle, super-v&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; maximize-vertically &lt;span class="s2"&gt;"['v']"&lt;/span&gt;

&lt;span class="c1"&gt;# run command, super-r&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$kb&lt;/span&gt; panel-run-dialog &lt;span class="s2"&gt;"['r', 'F2']"&lt;/span&gt;


&lt;span class="c1"&gt;# Custom commands&lt;/span&gt;

&lt;span class="nv"&gt;mk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'org.gnome.settings-daemon.plugins.media-keys'&lt;/span&gt;
&lt;span class="nv"&gt;ckb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings'&lt;/span&gt;

gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt; custom-keybindings &lt;span class="s2"&gt;"['&lt;/span&gt;&lt;span class="nv"&gt;$ckb&lt;/span&gt;&lt;span class="s2"&gt;/custom0/', '&lt;/span&gt;&lt;span class="nv"&gt;$ckb&lt;/span&gt;&lt;span class="s2"&gt;/custom1/']"&lt;/span&gt;

gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt;.custom-keybinding:&lt;span class="nv"&gt;$ckb&lt;/span&gt;/custom0/ name &lt;span class="s2"&gt;"screen off"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt;.custom-keybinding:&lt;span class="nv"&gt;$ckb&lt;/span&gt;/custom0/ &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="s2"&gt;"screenoff"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt;.custom-keybinding:&lt;span class="nv"&gt;$ckb&lt;/span&gt;/custom0/ binding &lt;span class="s2"&gt;"z"&lt;/span&gt;

gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt;.custom-keybinding:&lt;span class="nv"&gt;$ckb&lt;/span&gt;/custom1/ name &lt;span class="s2"&gt;"terminal"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt;.custom-keybinding:&lt;span class="nv"&gt;$ckb&lt;/span&gt;/custom1/ &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="s2"&gt;"terminal"&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;$mk&lt;/span&gt;.custom-keybinding:&lt;span class="nv"&gt;$ckb&lt;/span&gt;/custom1/ binding &lt;span class="s2"&gt;"t"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Embedded in that is the ultimate solution to my longstanding irk with
Unity and Gnome's default window switcher (alt-tab.) By default it
groups windows of a single application together, requiring some extra
-grave pressing to navigate between windows within an application.&lt;/p&gt;
&lt;p&gt;This not only requires way more effort, but also breaks the expected
behaviour of just tapping alt-tab to go back to the last used window.
Instead it goes back to the last used application, so you can't toggle
between two windows of the same application, eg. two terminals. Absolute
madness.&lt;/p&gt;
&lt;p&gt;The above modifies alt-tab to just cycle through all windows, ungrouped,
which fixes the ability to toggle between last two windows. Also,
alt-grave is provided as an alternative to cycle backwards through the
windows, which is easier to hit than shift-alt-tab.&lt;/p&gt;</description><category>bash</category><category>linux</category><category>terminal</category><guid>https://www.tartley.com/posts/automate-gnome-keybindings/</guid><pubDate>Thu, 05 Oct 2017 01:06:47 GMT</pubDate></item><item><title>Postscript formatted man pages</title><link>https://www.tartley.com/posts/postscript-formatted-man-pages/</link><dc:creator>Jonathan Hartley</dc:creator><description>&lt;p&gt;&lt;code&gt;man&lt;/code&gt; and its &lt;code&gt;troff&lt;/code&gt; formatting can be asked to produce postscript
output. Define a Bash function, e.g. in your .bashrc:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="k"&gt;function&lt;/span&gt; psman &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;SLUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;FNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/tmp/man-&lt;/span&gt;&lt;span class="nv"&gt;$SLUG&lt;/span&gt;&lt;span class="s2"&gt;.pdf"&lt;/span&gt;
    &lt;span class="nb"&gt;set&lt;/span&gt; -o pipefail
    man -t &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; ps2pdf - &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$FNAME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
      nohup evince &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$FNAME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt;/dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
    &lt;span class="nb"&gt;set&lt;/span&gt; +o pipefail
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(I tried to do this without tempfiles, using process substitution, &lt;a href="https://superuser.com/questions/1243405"&gt;but
failed. Anyone got better
Bash-fu&lt;/a&gt;?)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;man -t&lt;/code&gt; is the crucial part. It tells &lt;code&gt;man&lt;/code&gt; to produce output in
postscript format, which &lt;code&gt;ps2pdf&lt;/code&gt; can read, and &lt;code&gt;evince&lt;/code&gt; displays the
PDF. We disconnect the evince process using &lt;code&gt;nohup&lt;/code&gt;, so that it lives on
even if we kill the terminal. We `set -o pipefail` so that if `man`
fails, the exit code is preserved as the exit of `man|ps2pdf`, which
causes the `&amp;amp;&amp;amp;` to short-circuit, preventing evince from being run on
an empty pdf document. We restore `+o pipefail` again at the end.&lt;/p&gt;
&lt;p&gt;Then, from the command line:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;$ psman tr
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;produces&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tartley.com/files/2017/08/pman-tr.png"&gt;&lt;img alt="" src="https://www.tartley.com/files/2017/08/pman-tr.png"&gt;&lt;/a&gt;&lt;/p&gt;</description><category>bash</category><category>linux</category><category>terminal</category><guid>https://www.tartley.com/posts/postscript-formatted-man-pages/</guid><pubDate>Wed, 23 Aug 2017 01:34:02 GMT</pubDate></item></channel></rss>